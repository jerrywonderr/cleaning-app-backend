rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Users can read/write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow reading user profiles for service request purposes (to display provider/customer names)
      // This is needed for the service request system to show names in the UI
      allow read: if request.auth != null;
    }

    // Service Providers collection
    match /serviceProviders/{userId} {
      // All authenticated users can read service provider profiles (for discovery and booking)
      allow read: if request.auth != null;

      // Only the owner can write/edit their own service provider profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Bank Accounts collection
    match /bankAccounts/{userId} {
      // Users can read/write their own bank account
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Payout Accounts collection - now supports multiple accounts per user
    match /payoutAccounts/{payoutAccountId} {
      // Users can read/write their own payout accounts
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Users can create new payout accounts
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Transaction Pins collection
    match /transactionPins/{userId} {
      // Users can read/write their own transaction pin
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Service Requests collection
    match /serviceRequests/{requestId} {
      // Users can read service requests they're involved in
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.providerId);

      // Customers can create service requests
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;

      // Both parties can update service requests they're involved in
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.providerId);

      // Only the customer can delete their own service requests
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.customerId;
    }

    // Ratings collection
    match /ratings/{ratingId} {
      // All authenticated users can read ratings (for provider profiles)
      allow read: if request.auth != null;

      // Customers can create ratings for services they've completed
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;

      // Customers can update their own ratings (for editing reviews)
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.customerId;

      // Customers can delete their own ratings
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.customerId;
    }
  }
}